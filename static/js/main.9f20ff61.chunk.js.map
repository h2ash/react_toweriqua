{"version":3,"sources":["components/User.jsx","components/TableOfUsers.jsx","components/Pagination/PaginationButtons.jsx","containers/RandomUser/RandomUser.jsx","App.js","redux/actions/actions.js","lib/constants.js","redux/store.js","redux/reducers/users.js","index.js"],"names":["User","user","key","className","scope","id","name","surname","TableOfUsers","users","currentPage","firstIndexPhoneOnCurrentPage","lastPossibleIndexPhoneOnCurPage","filter","map","PaginationButtons","chooseCurrentPage","pages","arrOfPages","buttonDisabledStart","buttonDisabledEnd","type","onClick","button","index","RandomUser","state","indexOfUserForShowing","nameUserForShowing","surnameUserForShowing","chooseRandomIndex","setState","Math","floor","random","props","length","this","myInterval","setInterval","clearInterval","console","log","React","Component","App","fetchUsers","a","async","fetch","response","json","saveUsers","error","sumOfPages","ceil","createArrayOfPages","prevState","arr","i","push","value","connect","usersToSave","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f20ff61.chunk.js","sourcesContent":["import React from 'react';\n\nconst User = ({ user, key }) => {\n  return (\n    <tr key={key}>\n      <th className='table__th-person-id' scope='row'>{user.id}</th>\n      <td className='table__td-person-name'>{user.name}</td>\n      <td>{user.surname}</td>\n    </tr>\n  )\n}\n\nexport default User;","import React from 'react';\nimport User from './User';\n\nconst TableOfUsers = ({ users, currentPage }) => {\n  const firstIndexPhoneOnCurrentPage = currentPage === 1 \n    ? 1 \n    : ((currentPage - 1) * 5) + 1;\n  const lastPossibleIndexPhoneOnCurPage = currentPage * 5;\n\n  return (\n    <table className=\"table\">\n      <tr>\n        <th>id</th>\n        <th>name</th>\n        <th>surname</th>\n      </tr>\n      {\n        users\n          .filter(user => user.id >= firstIndexPhoneOnCurrentPage\n            && user.id <= lastPossibleIndexPhoneOnCurPage)\n          .map(user => (\n            <User\n              user={user}\n              key={user.id}\n            />\n          ))\n      }\n    </table>\n  );\n};\n\nexport default TableOfUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PaginationButtons = ({\n  chooseCurrentPage,\n  currentPage,\n  pages,\n  arrOfPages,\n}) => {\n  const buttonDisabledStart = currentPage === 1 ? 'button--pagination_disabled' : '';\n  const buttonDisabledEnd = currentPage === pages ? 'button--pagination_disabled' : '';\n\n  return (\n    <nav>\n      <ul className=\"pagination__buttons\">\n        <li>\n          <button\n            type=\"button\"\n            className={`button button--pagination ${buttonDisabledStart}`}\n            onClick={() => chooseCurrentPage(currentPage - 1)}\n          >\n            &#60;\n          </button>\n        </li>\n\n        {\n          arrOfPages.map((button, index) => (\n            <li key={index}>\n              <button\n                type=\"button\"\n                className={`button button--pagination \n                  ${button === currentPage ? 'button--pagination_active' : ''}`}\n                onClick={() => chooseCurrentPage(button)}\n              >\n                {button}\n              </button>\n            </li>\n          ))\n        }\n\n        <li>\n          <button\n            type=\"button\"\n            className={`button button--pagination ${buttonDisabledEnd}`}\n            onClick={() => chooseCurrentPage(currentPage + 1)}\n          >\n            &#62;\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nPaginationButtons.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  pages: PropTypes.number.isRequired,\n  choosePage: PropTypes.func.isRequired,\n  arrOfPages: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default PaginationButtons;\n","import React from 'react';\n\nclass RandomUser extends React.Component {\n  state = {\n    indexOfUserForShowing: 0,\n    nameUserForShowing: \"Want to see?\",\n    surnameUserForShowing: 'Just wait!',\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(this.chooseRandomIndex, 8000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  chooseRandomIndex = () => {\n    this.setState(() => {\n      const newIndex = Math.floor(Math.random() * (this.props.users.length + 1));\n\n      return {\n        indexOfUserForShowing: newIndex,\n      }\n    },\n      () => {\n        this.setState({\n          nameUserForShowing: this.props.users[this.state.indexOfUserForShowing].name,\n          surnameUserForShowing: this.props.users[this.state.indexOfUserForShowing].surname,\n        })\n      })\n  }\n\n  render() {\n    console.log(this.state.indexOfUserForShowing);\n    return (\n      <div className=\"random-user\">\n        Random user every 8 seconds!\n        <p>{this.state.nameUserForShowing} {this.state.surnameUserForShowing}</p>\n      </div>\n    )\n  }\n}\n\nexport default RandomUser;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { saveUsers } from './redux/actions/actions';\nimport './styles/App.scss';\nimport TableOfUsers from './components/TableOfUsers';\nimport PaginationButtons from './components/Pagination/PaginationButtons';\nimport RandomUser from './containers/RandomUser/RandomUser';\n\nclass App extends React.Component {\n  state = {\n    currentPage: 1,\n    pages: 1,\n    arrOfPages: [1],\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  };\n\n  fetchUsers = async() => {\n    try {\n      const response = await fetch('users.json');\n      const json = await response.json();\n      this.props.saveUsers(json.users);\n    } catch(e) {\n      console.error(e);\n    } finally {\n      this.sumOfPages();\n    }\n  }\n\n  sumOfPages = () => {\n    this.setState({\n      pages: Math.ceil(this.props.users.length / 5),\n    });\n\n    this.createArrayOfPages();\n  }\n\n  createArrayOfPages = () => {\n    this.setState(prevState => {\n      const arr = [];\n\n      for (let i = 1; i <= prevState.pages; i++) {\n        arr.push(i);\n      };\n\n      return {\n        arrOfPages: arr,\n      }\n    })\n  }\n\n  chooseCurrentPage = (value) => {\n    this.setState({\n      currentPage: value,\n    })\n  }\n  \n  render() {\n    const { currentPage, pages, arrOfPages } = this.state;\n    const { users } = this.props;\n    return (\n      <div className=\"app\">\n        <main className='wrapper__main'>\n          <h1 className=\"heading heading--m\">Table of users</h1>\n          <TableOfUsers\n            users={users}\n            currentPage={currentPage}\n          />\n          <RandomUser\n            users={users}\n          />\n          <PaginationButtons\n            chooseCurrentPage={this.chooseCurrentPage}\n            currentPage={currentPage}\n            pages={pages}\n            arrOfPages={arrOfPages}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default connect(({\n  users,\n}) => ({\n  users,\n}), {\n  saveUsers,\n})(App);\n","import {\n  SAVE_USERS\n} from '../../lib/constants';\n\nexport const saveUsers = usersToSave => ({\n  type: SAVE_USERS,\n  usersToSave,\n});\n","export const SAVE_USERS = 'SAVE_USERS';","import { combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { users } from './reducers/users';\n\nconst rootReducer = combineReducers({\n  users,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","import {\n  SAVE_USERS\n} from '../../lib/constants';\n\nexport const users = (state = [], action) => {\n  switch (action.type) {\n    case SAVE_USERS: \n      return action.usersToSave;\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}